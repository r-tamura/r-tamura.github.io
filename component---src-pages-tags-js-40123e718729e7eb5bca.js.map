{"version":3,"file":"component---src-pages-tags-js-40123e718729e7eb5bca.js","mappings":"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","sources":["webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://rtam-tech-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://rtam-tech-blog/./src/pages/tags.js","webpack://rtam-tech-blog/./src/utils/markdown-utils.js","webpack://rtam-tech-blog/./src/utils/helper.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { graphql } from 'gatsby';\nimport React from 'react';\nimport { countTags } from '../utils/markdown-utils';\n\n/**\n * 全ての記事で使用されているタグ一覧を表示するページ\n */\nclass TagsPage extends React.Component {\n  render() {\n\n    const counts = countTags(this.props.data.allMarkdownRemark.edges);\n\n    return (\n      <div>\n        {\n          counts.map(count => <div key={count.name}>{count.name}: {count.count}</div>)\n        }\n      </div>\n    )\n  }\n}\n\nexport default TagsPage\n\nexport const query = graphql`\nquery tagsQuery {\n  allMarkdownRemark {\n    edges {\n      node {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n}\n`\n","import * as H from './helper'\n\n/**\n * 全ての記事内にあるタグの件数をタグ毎に集計します\n * @param {array} edges\n * @return {array<object>} 集計結果\n */\nexport function countTags(edges) {\n\n  if(edges.length === 0) {\n    return []\n  }\n\n  const acc = H.flatten(edges.map(edge => edge.node.frontmatter.tags))\n    .reduce((acc, v) => {\n      if (acc[v]) {\n        acc[v] = acc[v] + 1\n      } else {\n        acc[v] = 1\n      }\n      return acc\n    }, {})\n  \n  return Object.entries(acc).map(([name, count]) => ({name, count}))\n}\n","/**\n * 配列を１段階平坦化する\n * @param {array} xs\n * @return array 平坦化された配列\n */\nfunction flatten(xs) {\n  return [].concat(...xs)\n}\nexports.flatten = flatten\n\n/**\n * 文字列をwordごとの配列へ分割する\n * @param {string} str\n * @return {array} 分割されたWord毎の配列\n * @example\n *\n * kebabCase('FooBar')   // => [Foo, Bar]\n * kebabCase('foo bar')  // => [foo, bar]\n * kebabCase('foo_bar')  // => [foo, bar]\n */\nfunction words(str) {\n  return str\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/^[_]+/, '')\n    .replace(/[_]+$/, '')\n    .replace('_', ' ')\n    .trim()\n    .split(' ')\n}\nexports.words = words\n\n/**\n * 文字列をKebab Caseへ変換する\n * @param {string} str\n * @return {string} KebabCase文字列\n * @example\n *\n * kebabCase('FooBar')   // => 'foo-bar'\n * kebabCase('foo bar')  // => 'foo-bar'\n * kebabCase('foo_bar')  // => 'foo-bar'\n */\nfunction kebabCase(str) {\n  console.assert(typeof str === \"string\");\n  return words(str.replace(/['\\u2019]/g, '')).join('-').toLowerCase()\n}\nexports.kebabCase = kebabCase\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TagsPage","render","counts","edges","acc","H","map","edge","node","frontmatter","tags","reduce","v","entries","count","countTags","this","props","data","allMarkdownRemark","key","React","words","str","replace","trim","split","xs","concat","console","assert","join","toLowerCase"],"sourceRoot":""}