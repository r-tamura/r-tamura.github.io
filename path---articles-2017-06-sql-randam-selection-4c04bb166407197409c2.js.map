{"version":3,"sources":["webpack:///path---articles-2017-06-sql-randam-selection-4c04bb166407197409c2.js","webpack:///./.cache/json/articles-2017-06-sql-randam-selection.json"],"names":["webpackJsonp","379","module","exports","data","site","siteMetadata","authorName","authorDetail","githubId","twitterId","markdownRemark","html","frontmatter","tags","title","date","pathContext","slug"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,WAAA,WAAAC,aAAA,yBAAAC,SAAA,WAAAC,UAAA,eAAgHC,gBAAmBC,KAAA,ixZAA4uZC,aAAqlBC,MAAA,eAAAC,MAAA,wBAAAC,KAAA,mBAAgFC,aAAgBC,KAAA","file":"path---articles-2017-06-sql-randam-selection-4c04bb166407197409c2.js","sourcesContent":["webpackJsonp([7690560359269],{\n\n/***/ 379:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"authorName\":\"r-tamura\",\"authorDetail\":\"Web関連多めのソフトウェアエンジニアです。\",\"githubId\":\"r-tamura\",\"twitterId\":\"r_tamura30\"}},\"markdownRemark\":{\"html\":\"<p>MySQLでランダムなデータを取得する場合によく利用されるのがorder by rand()だが、これはインデックスが適用されないので、代替え方法をいくつか調査したまとめ</p>\\n<h2>ランダムにソートする方法</h2>\\n<p>MySQLでランダムにデータを選択する方法を調べてみると、よくあるのが<code>order by rand()</code>で\\nランダムにソートして、上から欲しい件数だけ取得する方法が見つかる。SQLは以下のようなもの。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>この場合、全レコードソートを行われるが<strong>インデックスが使われず、テーブルスキャンでのソート</strong>となる。<br>\\n<code>explain</code>の結果もtypeが<code>All</code>, extraが<code>using filesort</code>かつ<code>using temporary</code>となっていて、\\nSQLとしてはかなり非効率なものであることがわかる。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">desc</span> <span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span>\\\\G\\n<span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span> <span class=\\\"token keyword\\\">row</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span>\\n           id: <span class=\\\"token number\\\">1</span>\\n  select_type: <span class=\\\"token keyword\\\">SIMPLE</span>\\n        <span class=\\\"token keyword\\\">table</span>: customer\\n         <span class=\\\"token keyword\\\">type</span>: <span class=\\\"token keyword\\\">ALL</span>\\npossible_keys: <span class=\\\"token boolean\\\">NULL</span>\\n          <span class=\\\"token keyword\\\">key</span>: <span class=\\\"token boolean\\\">NULL</span>\\n      key_len: <span class=\\\"token boolean\\\">NULL</span>\\n          ref: <span class=\\\"token boolean\\\">NULL</span>\\n         <span class=\\\"token keyword\\\">rows</span>: <span class=\\\"token number\\\">646</span>\\n        Extra: <span class=\\\"token keyword\\\">Using</span> <span class=\\\"token keyword\\\">temporary</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token keyword\\\">Using</span> filesort\\n</code></pre>\\n      </div>\\n<h3>解決法1: 最小値と最大値のランダムなキーを選択する</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span>\\n  <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span>\\n  customer <span class=\\\"token number\\\">c</span>\\n<span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span>\\n  <span class=\\\"token comment\\\">-- [IDの最大値 * (0.0-1.0)のランダム値] の切り上げ</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> ceil<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> rand_id<span class=\\\"token punctuation\\\">)</span> rnd\\n<span class=\\\"token keyword\\\">on</span> \\n  <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id <span class=\\\"token operator\\\">=</span> rnd<span class=\\\"token punctuation\\\">.</span>rand_id\\n</code></pre>\\n      </div>\\n<p>複数行の中秋する場合はユーザ定義変数を利用する</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span> \\n    t<span class=\\\"token punctuation\\\">.</span><span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">select</span> \\n    ceil<span class=\\\"token punctuation\\\">(</span>\\n      rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token keyword\\\">select</span> \\n          <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">from</span>\\n          customer\\n      <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span> random_num<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token variable\\\">@num</span>:<span class=\\\"token operator\\\">=</span><span class=\\\"token variable\\\">@num</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n  <span class=\\\"token keyword\\\">from</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token variable\\\">@num</span>:<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token number\\\">a</span><span class=\\\"token punctuation\\\">,</span> customer\\n  <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">10</span>\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token number\\\">b</span><span class=\\\"token punctuation\\\">,</span>\\ncustomer <span class=\\\"token keyword\\\">as</span> t\\n<span class=\\\"token keyword\\\">where</span>\\n    <span class=\\\"token number\\\">b</span><span class=\\\"token punctuation\\\">.</span>random_num <span class=\\\"token operator\\\">=</span> t<span class=\\\"token punctuation\\\">.</span>customer_id<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>デメリット</h4>\\n<p> IDに欠番がある場合は使用できない</p>\\n<h3>解決策2: 最小値と最大値のランダムなキーを選択する(欠番がある場合は欠番後の最初のキーを選択)</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span>\\n  <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span>\\n  customer <span class=\\\"token number\\\">c</span>\\n<span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span>\\n  <span class=\\\"token comment\\\">-- [IDの最大値 * (0.0-1.0)のランダム値] の切り上げ</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> ceil<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> rand_id<span class=\\\"token punctuation\\\">)</span> rnd\\n<span class=\\\"token keyword\\\">on</span> \\n  <span class=\\\"token comment\\\">-- ランダムな位置に最も近いIDを選択</span>\\n  <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id <span class=\\\"token operator\\\">>=</span> rnd<span class=\\\"token punctuation\\\">.</span>rand_id\\n<span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id\\n<span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>メリット</h4>\\n<ul>\\n<li>IDに欠番がある場合でも使用可能</li>\\n</ul>\\n<h4>デメリット</h4>\\n<ul>\\n<li>複数選択する場合はランダムな位置から連番のものが選択される</li>\\n<li>欠番の次のIDがが選択される確率が高い</li>\\n</ul>\\n<h3>解決策3: オフセットを用いてランダムに選択</h3>\\n<p>SQLのみでなくアプリケーションも使用して、ランダムに行数を選択するSQLとその行数目を<code>offset</code>で選択する。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token comment\\\">-- ランダムに行数を選択するSQL</span>\\n<span class=\\\"token keyword\\\">select</span> floor<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> id_offset<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">-- </span>\\n<span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token keyword\\\">offset</span> :<span class=\\\"token keyword\\\">offset</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>メリット</h4>\\n<ul>\\n<li>IDが数値でなくても使用できる</li>\\n</ul>\\n<h4>デメリット</h4>\\n<ul>\\n<li>2回SQLを発行する必要がある</li>\\n<li>offsetが大きいと<strong>先頭からOFFSETまでの検索も行う</strong>ので遅くなる</li>\\n</ul>\\n<h2>使用するテーブルについて</h2>\\n<p>この記事で使用するテーブル一覧</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">CREATE</span> <span class=\\\"token keyword\\\">TABLE</span> <span class=\\\"token punctuation\\\">`</span>customer<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token punctuation\\\">`</span>customer_id<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token keyword\\\">smallint</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> unsigned <span class=\\\"token keyword\\\">AUTO_INCREMENT</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">PRIMARY</span> <span class=\\\"token keyword\\\">KEY</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">`</span>customer_id<span class=\\\"token punctuation\\\">`</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h2>まとめ</h2>\\n<p>今のところ、それぞれを使う場面は以下のようになる。</p>\\n<p>IDが数値 &#x26; 連番 => 解決策1<br>\\nIDが数値 &#x26; 連番でない => 解決策2<br>\\nIDが数値でない => 解決策3  </p>\\n<p>他にもワークテーブルを使用した方法もあるようなので、要調査。</p>\\n<h2>References</h2>\\n<ul>\\n<li><a href=\\\"http://www.r-5.org/files/books/computers/languages/sql/style/Bill_Karwin-SQL_Antipatterns-EN.pdf\\\">SQL Antipattern</a></li>\\n<li><a href=\\\"http://www.mysqltutorial.org/select-random-records-database-table.aspx\\\">MySQL Select Random Records | MySQL Tutorial</a></li>\\n<li><a href=\\\"http://jan.kneschke.de/projects/mysql/order-by-rand/\\\">ORDER BY RAND() </a></li>\\n<li><a href=\\\"http://deaimobi.com/mbnk-307/\\\">MySQLのlimitで大量データのパフォーマンスが遅い重い！</a></li>\\n</ul>\",\"frontmatter\":{\"tags\":[\"SQL\",\"MySQL\"],\"title\":\"SQLでのRandom Selection\",\"date\":\"09 June, 2017\"}}},\"pathContext\":{\"slug\":\"/articles/2017/06/sql-randam-selection/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-2017-06-sql-randam-selection-4c04bb166407197409c2.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"authorName\":\"r-tamura\",\"authorDetail\":\"Web関連多めのソフトウェアエンジニアです。\",\"githubId\":\"r-tamura\",\"twitterId\":\"r_tamura30\"}},\"markdownRemark\":{\"html\":\"<p>MySQLでランダムなデータを取得する場合によく利用されるのがorder by rand()だが、これはインデックスが適用されないので、代替え方法をいくつか調査したまとめ</p>\\n<h2>ランダムにソートする方法</h2>\\n<p>MySQLでランダムにデータを選択する方法を調べてみると、よくあるのが<code>order by rand()</code>で\\nランダムにソートして、上から欲しい件数だけ取得する方法が見つかる。SQLは以下のようなもの。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>この場合、全レコードソートを行われるが<strong>インデックスが使われず、テーブルスキャンでのソート</strong>となる。<br>\\n<code>explain</code>の結果もtypeが<code>All</code>, extraが<code>using filesort</code>かつ<code>using temporary</code>となっていて、\\nSQLとしてはかなり非効率なものであることがわかる。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">desc</span> <span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span>\\\\G\\n<span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span> <span class=\\\"token keyword\\\">row</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span>\\n           id: <span class=\\\"token number\\\">1</span>\\n  select_type: <span class=\\\"token keyword\\\">SIMPLE</span>\\n        <span class=\\\"token keyword\\\">table</span>: customer\\n         <span class=\\\"token keyword\\\">type</span>: <span class=\\\"token keyword\\\">ALL</span>\\npossible_keys: <span class=\\\"token boolean\\\">NULL</span>\\n          <span class=\\\"token keyword\\\">key</span>: <span class=\\\"token boolean\\\">NULL</span>\\n      key_len: <span class=\\\"token boolean\\\">NULL</span>\\n          ref: <span class=\\\"token boolean\\\">NULL</span>\\n         <span class=\\\"token keyword\\\">rows</span>: <span class=\\\"token number\\\">646</span>\\n        Extra: <span class=\\\"token keyword\\\">Using</span> <span class=\\\"token keyword\\\">temporary</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token keyword\\\">Using</span> filesort\\n</code></pre>\\n      </div>\\n<h3>解決法1: 最小値と最大値のランダムなキーを選択する</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span>\\n  <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span>\\n  customer <span class=\\\"token number\\\">c</span>\\n<span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span>\\n  <span class=\\\"token comment\\\">-- [IDの最大値 * (0.0-1.0)のランダム値] の切り上げ</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> ceil<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> rand_id<span class=\\\"token punctuation\\\">)</span> rnd\\n<span class=\\\"token keyword\\\">on</span> \\n  <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id <span class=\\\"token operator\\\">=</span> rnd<span class=\\\"token punctuation\\\">.</span>rand_id\\n</code></pre>\\n      </div>\\n<p>複数行の中秋する場合はユーザ定義変数を利用する</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span> \\n    t<span class=\\\"token punctuation\\\">.</span><span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">select</span> \\n    ceil<span class=\\\"token punctuation\\\">(</span>\\n      rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token keyword\\\">select</span> \\n          <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">from</span>\\n          customer\\n      <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span> random_num<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token variable\\\">@num</span>:<span class=\\\"token operator\\\">=</span><span class=\\\"token variable\\\">@num</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n  <span class=\\\"token keyword\\\">from</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token variable\\\">@num</span>:<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token number\\\">a</span><span class=\\\"token punctuation\\\">,</span> customer\\n  <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">10</span>\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token number\\\">b</span><span class=\\\"token punctuation\\\">,</span>\\ncustomer <span class=\\\"token keyword\\\">as</span> t\\n<span class=\\\"token keyword\\\">where</span>\\n    <span class=\\\"token number\\\">b</span><span class=\\\"token punctuation\\\">.</span>random_num <span class=\\\"token operator\\\">=</span> t<span class=\\\"token punctuation\\\">.</span>customer_id<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>デメリット</h4>\\n<p> IDに欠番がある場合は使用できない</p>\\n<h3>解決策2: 最小値と最大値のランダムなキーを選択する(欠番がある場合は欠番後の最初のキーを選択)</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">select</span>\\n  <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">from</span>\\n  customer <span class=\\\"token number\\\">c</span>\\n<span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span>\\n  <span class=\\\"token comment\\\">-- [IDの最大値 * (0.0-1.0)のランダム値] の切り上げ</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> ceil<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>customer_id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> rand_id<span class=\\\"token punctuation\\\">)</span> rnd\\n<span class=\\\"token keyword\\\">on</span> \\n  <span class=\\\"token comment\\\">-- ランダムな位置に最も近いIDを選択</span>\\n  <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id <span class=\\\"token operator\\\">>=</span> rnd<span class=\\\"token punctuation\\\">.</span>rand_id\\n<span class=\\\"token keyword\\\">order</span> <span class=\\\"token keyword\\\">by</span> <span class=\\\"token number\\\">c</span><span class=\\\"token punctuation\\\">.</span>customer_id\\n<span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>メリット</h4>\\n<ul>\\n<li>IDに欠番がある場合でも使用可能</li>\\n</ul>\\n<h4>デメリット</h4>\\n<ul>\\n<li>複数選択する場合はランダムな位置から連番のものが選択される</li>\\n<li>欠番の次のIDがが選択される確率が高い</li>\\n</ul>\\n<h3>解決策3: オフセットを用いてランダムに選択</h3>\\n<p>SQLのみでなくアプリケーションも使用して、ランダムに行数を選択するSQLとその行数目を<code>offset</code>で選択する。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token comment\\\">-- ランダムに行数を選択するSQL</span>\\n<span class=\\\"token keyword\\\">select</span> floor<span class=\\\"token punctuation\\\">(</span>rand<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">select</span> <span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">from</span> customer<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> id_offset<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">-- </span>\\n<span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> customer <span class=\\\"token keyword\\\">limit</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token keyword\\\">offset</span> :<span class=\\\"token keyword\\\">offset</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h4>メリット</h4>\\n<ul>\\n<li>IDが数値でなくても使用できる</li>\\n</ul>\\n<h4>デメリット</h4>\\n<ul>\\n<li>2回SQLを発行する必要がある</li>\\n<li>offsetが大きいと<strong>先頭からOFFSETまでの検索も行う</strong>ので遅くなる</li>\\n</ul>\\n<h2>使用するテーブルについて</h2>\\n<p>この記事で使用するテーブル一覧</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">CREATE</span> <span class=\\\"token keyword\\\">TABLE</span> <span class=\\\"token punctuation\\\">`</span>customer<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token punctuation\\\">`</span>customer_id<span class=\\\"token punctuation\\\">`</span> <span class=\\\"token keyword\\\">smallint</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> unsigned <span class=\\\"token keyword\\\">AUTO_INCREMENT</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">PRIMARY</span> <span class=\\\"token keyword\\\">KEY</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">`</span>customer_id<span class=\\\"token punctuation\\\">`</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<h2>まとめ</h2>\\n<p>今のところ、それぞれを使う場面は以下のようになる。</p>\\n<p>IDが数値 &#x26; 連番 => 解決策1<br>\\nIDが数値 &#x26; 連番でない => 解決策2<br>\\nIDが数値でない => 解決策3  </p>\\n<p>他にもワークテーブルを使用した方法もあるようなので、要調査。</p>\\n<h2>References</h2>\\n<ul>\\n<li><a href=\\\"http://www.r-5.org/files/books/computers/languages/sql/style/Bill_Karwin-SQL_Antipatterns-EN.pdf\\\">SQL Antipattern</a></li>\\n<li><a href=\\\"http://www.mysqltutorial.org/select-random-records-database-table.aspx\\\">MySQL Select Random Records | MySQL Tutorial</a></li>\\n<li><a href=\\\"http://jan.kneschke.de/projects/mysql/order-by-rand/\\\">ORDER BY RAND() </a></li>\\n<li><a href=\\\"http://deaimobi.com/mbnk-307/\\\">MySQLのlimitで大量データのパフォーマンスが遅い重い！</a></li>\\n</ul>\",\"frontmatter\":{\"tags\":[\"SQL\",\"MySQL\"],\"title\":\"SQLでのRandom Selection\",\"date\":\"09 June, 2017\"}}},\"pathContext\":{\"slug\":\"/articles/2017/06/sql-randam-selection/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-2017-06-sql-randam-selection.json\n// module id = 379\n// module chunks = 7690560359269"],"sourceRoot":""}